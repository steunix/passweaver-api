// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("PASSWEAVER_PRISMA_URL")
}

// Folders of item
model Folders {
  id          String @db.VarChar(30) @id
  parent      String? @db.VarChar(30)
  description String @db.VarChar(100)
  personal    Boolean @default(false)
  user        String? @db.VarChar(30)
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  relItems    Items[]
  relFolders  FolderGroupPermission[]
  relUsers    Users[]

  @@index([parent])
  @@index([user])
}

model Groups {
  id          String @db.VarChar(30) @id
  description String @db.VarChar(100)
  parent      String? @db.VarChar(30)
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  rel1        UsersGroups[]
  rel2        FolderGroupPermission[]

  @@index([parent])
}

model Users {
  id          String @db.VarChar(30) @id
  login       String @db.VarChar(50)
  lastname    String @db.VarChar(100)
  firstname   String? @db.VarChar(100)
  authmethod  String @db.VarChar(10)
  locale      String @db.VarChar(10)
  email       String @db.VarChar(50)
  secret      String @db.VarChar(100)
  secretexpiresat DateTime
  personalsecret String? @db.VarChar(100)
  active      Boolean @default(true)
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  Groups      UsersGroups[]
  Folders     Folders[]

  @@index([login])
}

model UsersGroups {
  id          String @db.VarChar(30) @id
  user        String @db.VarChar(30)
  group       String @db.VarChar(30)
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  Users       Users @relation(fields:[user], references:[id])
  Groups      Groups @relation(fields:[group], references:[id])

  @@index([user])
  @@index([group])
}

model FolderGroupPermission {
  id          String @db.VarChar(30) @id
  folder      String @db.VarChar(30)
  group       String @db.VarChar(30)
  read        Boolean
  write       Boolean
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  Folders     Folders @relation(fields:[folder], references:[id])
  Groups      Groups @relation(fields:[group], references:[id])

  @@index([folder])
  @@index([group])
}

model Items {
  id          String @db.VarChar(30) @id
  folder      String @db.VarChar(30)
  personal    Boolean @default(false)
  type        String? @db.VarChar(10)
  title       String @db.VarChar(200)
  data        String
  dataiv      String
  dataauthtag String
  algo        String?
  metadata    String?
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt
  accessedat  DateTime?

  folderInfo  Folders @relation(fields: [folder], references: [id])

  @@index([folder])
}

model ActionLog {
  id          String @db.VarChar(30) @id
  timestamp   DateTime @default(now())
  action      String @db.VarChar(50)
  itemtype    String @db.VarChar(20)
  itemid      String @db.VarChar(100)
  user        String? @db.VarChar(30)

  @@index([timestamp])
  @@index([itemid])
  @@index([user])
}